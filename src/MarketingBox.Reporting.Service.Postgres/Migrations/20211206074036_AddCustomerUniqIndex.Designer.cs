// <auto-generated />
using System;
using MarketingBox.Reporting.Service.Postgres;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MarketingBox.Reporting.Service.Postgres.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20211206074036_AddCustomerUniqIndex")]
    partial class AddCustomerUniqIndex
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("reporting-service")
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MarketingBox.Reporting.Service.Domain.Models.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AffiliateId")
                        .HasColumnType("bigint");

                    b.Property<long>("BrandId")
                        .HasColumnType("bigint");

                    b.Property<long>("CampaignId")
                        .HasColumnType("bigint");

                    b.Property<string>("Country")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DepositDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Ip")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<bool>("IsDeposit")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Phone")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("TenantId")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("UId")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("Country");

                    b.HasIndex("CreatedDate");

                    b.HasIndex("Email");

                    b.HasIndex("IsDeposit");

                    b.HasIndex("TenantId");

                    b.HasIndex("UId")
                        .IsUnique();

                    b.ToTable("customer", "reporting-service");
                });

            modelBuilder.Entity("MarketingBox.Reporting.Service.Postgres.ReadModels.AffiliateAccesses.AffiliateAccess", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("AffiliateId")
                        .HasColumnType("bigint");

                    b.Property<long>("MasterAffiliateId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AffiliateId");

                    b.HasIndex("MasterAffiliateId", "AffiliateId")
                        .IsUnique();

                    b.ToTable("affiliate_access", "reporting-service");
                });

            modelBuilder.Entity("MarketingBox.Reporting.Service.Postgres.ReadModels.Deposits.Deposit", b =>
                {
                    b.Property<long>("RegistrationId")
                        .HasColumnType("bigint");

                    b.Property<long>("AffiliateId")
                        .HasColumnType("bigint");

                    b.Property<long>("BrandId")
                        .HasColumnType("bigint");

                    b.Property<string>("BrandStatus")
                        .HasColumnType("text");

                    b.Property<long>("CampaignId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("ConversionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CustomerId")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<long>("IntegrationId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("RegisterDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("Sequence")
                        .HasColumnType("bigint");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("UniqueId")
                        .HasColumnType("text");

                    b.HasKey("RegistrationId");

                    b.HasIndex("AffiliateId");

                    b.HasIndex("TenantId", "RegistrationId");

                    b.ToTable("deposits", "reporting-service");
                });

            modelBuilder.Entity("MarketingBox.Reporting.Service.Postgres.ReadModels.Leads.Registration", b =>
                {
                    b.Property<long>("RegistrationId")
                        .HasColumnType("bigint");

                    b.Property<long>("AffiliateId")
                        .HasColumnType("bigint");

                    b.Property<long>("BrandId")
                        .HasColumnType("bigint");

                    b.Property<long>("CampaignId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("ConversionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CrmStatus")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("DepositDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<long>("IntegrationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Ip")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<long>("Sequence")
                        .HasColumnType("bigint");

                    b.Property<string>("So")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Sub")
                        .HasColumnType("text");

                    b.Property<string>("Sub1")
                        .HasColumnType("text");

                    b.Property<string>("Sub10")
                        .HasColumnType("text");

                    b.Property<string>("Sub2")
                        .HasColumnType("text");

                    b.Property<string>("Sub3")
                        .HasColumnType("text");

                    b.Property<string>("Sub4")
                        .HasColumnType("text");

                    b.Property<string>("Sub5")
                        .HasColumnType("text");

                    b.Property<string>("Sub6")
                        .HasColumnType("text");

                    b.Property<string>("Sub7")
                        .HasColumnType("text");

                    b.Property<string>("Sub8")
                        .HasColumnType("text");

                    b.Property<string>("Sub9")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("UniqueId")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("RegistrationId");

                    b.HasIndex("AffiliateId");

                    b.HasIndex("TenantId", "RegistrationId");

                    b.ToTable("registrations", "reporting-service");
                });

            modelBuilder.Entity("MarketingBox.Reporting.Service.Postgres.ReadModels.Reports.ReportEntity", b =>
                {
                    b.Property<long>("AffiliateId")
                        .HasColumnType("bigint");

                    b.Property<long>("RegistrationId")
                        .HasColumnType("bigint");

                    b.Property<int>("ReportType")
                        .HasColumnType("integer");

                    b.Property<long>("BrandId")
                        .HasColumnType("bigint");

                    b.Property<long>("CampaignId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("IntegrationId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Payout")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Revenue")
                        .HasColumnType("numeric");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("UniqueId")
                        .HasColumnType("text");

                    b.HasKey("AffiliateId", "RegistrationId", "ReportType");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("TenantId");

                    b.ToTable("reports", "reporting-service");
                });
#pragma warning restore 612, 618
        }
    }
}
